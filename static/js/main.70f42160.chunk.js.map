{"version":3,"sources":["chuck.png","components/CategoryItem.js","components/Categories.js","components/Joke.js","App.js","reportWebVitals.js","index.js"],"names":["CategoryItem","category","to","className","Categories","useState","categories","state","setState","useEffect","fetchData","a","axios","get","data","map","Joke","match","myKey","useLocation","key","search","URLSearchParams","joke","url","value","charAt","toUpperCase","slice","App","src","Chuck","alt","path","exact","render","props","location","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","basename","document","getElementById"],"mappings":"kPAAe,MAA0B,kC,gECW1BA,EARM,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtB,OACE,cAAC,IAAD,CAAMC,GAAE,0BAAqBD,GAAYE,UAAU,gBAAnD,SACGF,KC4BQG,MA9Bf,WACE,MAA0BC,mBAAS,CACjCC,WAAY,KADd,mBAAOC,EAAP,KAAcC,EAAd,KAIAC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAS,uCAAG,4BAAAC,EAAA,sEACSC,IAAMC,IAC7B,+CAFc,OACVP,EADU,OAIhBE,EAAS,2BACJD,GADG,IAEND,WAAYA,EAAWQ,QANT,2CAAH,qDASf,OACE,gCACE,4CACA,qBAAKX,UAAU,aAAf,SACGI,EAAMD,WAAWS,KAAI,SAACd,GACrB,OAAO,cAAC,EAAD,CAA6BA,SAAUA,GAApBA,YCgBrBe,MAtCf,YAAyB,EAATC,MAAU,IAClBC,EAAQC,cAAcC,IAEtBC,EAASF,cAAcE,OACvBpB,EAAW,IAAIqB,gBAAgBD,GAAQR,IAAI,YAEjD,EAA0BR,mBAAS,CAAEkB,KAAM,KAA3C,mBAAOhB,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACRC,MACC,CAACT,EAAUiB,IAEd,IAAMR,EAAS,uCAAG,8BAAAC,EAAA,6DACVa,EAAM,0CADI,SAEGZ,IAAMC,IACvBZ,EAAWuB,EAAG,oBAAgBvB,GAAauB,GAH7B,OAEVD,EAFU,OAKhBf,EAAS,2BACJD,GADG,IAENgB,KAAMA,EAAKT,KAAKW,SAPF,2CAAH,qDAWf,OACE,gCACE,+BACGxB,EACGA,EAASyB,OAAO,GAAGC,cAAgB1B,EAAS2B,MAAM,GAClD,SAAU,IAHhB,UAMA,qCACE,mBAAGzB,UAAU,aAAb,SAA2BI,EAAMgB,a,MCL1BM,MAxBf,WACE,OACE,sBAAK1B,UAAU,MAAf,UACE,oDACA,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,MAAf,UACE,qBAAK2B,IAAKC,EAAOC,IAAI,KACrB,cAAC,EAAD,OAEF,cAAC,IAAD,UACG,CAAC,IAAK,UAAW,YAAYjB,KAAI,SAACkB,GAAD,OAChC,cAAC,IAAD,CAEEC,OAAK,EACLD,KAAMA,EACNE,OAAQ,SAACC,GAAD,OAAW,cAAC,EAAD,GAAWA,EAAMC,SAASjB,OAHxCa,eCRJK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASZ,OACP,cAAC,IAAMa,WAAP,UACE,cAAC,IAAD,CAAeC,SAAS,IAAxB,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.70f42160.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/chuck.e03202fc.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CategoryItem = ({ category }) => {\r\n  return (\r\n    <Link to={`random?category=${category}`} className='category-item'>\r\n      {category}\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default CategoryItem;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport CategoryItem from './CategoryItem';\r\n\r\nfunction Categories() {\r\n  const [state, setState] = useState({\r\n    categories: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    const categories = await axios.get(\r\n      'https://api.chucknorris.io/jokes/categories'\r\n    );\r\n    setState({\r\n      ...state,\r\n      categories: categories.data,\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <h2>Categories</h2>\r\n      <div className='categories'>\r\n        {state.categories.map((category) => {\r\n          return <CategoryItem key={category} category={category} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Categories;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router';\r\n\r\nimport axios from 'axios';\r\n\r\nfunction Joke({ match }) {\r\n  const myKey = useLocation().key;\r\n\r\n  const search = useLocation().search;\r\n  const category = new URLSearchParams(search).get('category');\r\n\r\n  const [state, setState] = useState({ joke: '' });\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [category, myKey]);\r\n\r\n  const fetchData = async () => {\r\n    const url = 'https://api.chucknorris.io/jokes/random';\r\n    const joke = await axios.get(\r\n      category ? url + `?category=${category}` : url\r\n    );\r\n    setState({\r\n      ...state,\r\n      joke: joke.data.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>\r\n        {category\r\n          ? category.charAt(0).toUpperCase() + category.slice(1)\r\n          : 'Random'}{' '}\r\n        Joke\r\n      </h2>\r\n      <blockquote>\r\n        <p className='joke-value'>{state.joke}</p>\r\n      </blockquote>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Joke;\r\n","import React from 'react';\r\nimport { Route, Redirect, Switch } from 'react-router-dom';\r\nimport Chuck from './chuck.png';\r\nimport Categories from './components/Categories';\r\nimport Joke from './components/Joke';\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='App'>\r\n      <h1>Chuck Norris Jokes</h1>\r\n      <div className='main'>\r\n        <div className='row'>\r\n          <img src={Chuck} alt='' />\r\n          <Categories />\r\n        </div>\r\n        <Switch>\r\n          {['/', '/random', '/random/'].map((path) => (\r\n            <Route\r\n              key={path}\r\n              exact\r\n              path={path}\r\n              render={(props) => <Joke key={props.location.key} />}\r\n            />\r\n          ))}\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter basename='/'>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}